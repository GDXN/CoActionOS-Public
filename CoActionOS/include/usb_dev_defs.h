/* Copyright 2011; All Rights Reserved
 * Please see http://www.coactionos.com/license.html for
 * licensing information.
 */


#ifndef USB_DEV_DEFS_H_
#define USB_DEV_DEFS_H_


/* bmRequest Dir */
#define USB_DEV_REQUEST_HOST_TO_DEVICE 0
#define USB_DEV_REQUEST_DEVICE_TO_HOST 1

/* bmRequest Type */
#define USB_DEV_REQUEST_STANDARD 0
#define USB_DEV_REQUEST_CLASS 1
#define USB_DEV_REQUEST_VENDOR 2
#define USB_DEV_REQUEST_RESERVED 3

/* bmRequest Recipient */
#define USB_DEV_REQUEST_TO_DEVICE 0
#define USB_DEV_REQUEST_TO_INTERFACE 1
#define USB_DEV_REQUEST_TO_ENDPOINT 2
#define USB_DEV_REQUEST_TO_OTHER 3



/* USB Standard Request Codes */
#define USB_DEV_REQUEST_GET_STATUS 0
#define USB_DEV_REQUEST_CLEAR_FEATURE 1
#define USB_DEV_REQUEST_SET_FEATURE 3
#define USB_DEV_REQUEST_SET_ADDRESS 5
#define USB_DEV_REQUEST_GET_DESCRIPTOR 6
#define USB_DEV_REQUEST_SET_DESCRIPTOR 7
#define USB_DEV_REQUEST_GET_CONFIGURATION 8
#define USB_DEV_REQUEST_SET_CONFIGURATION 9
#define USB_DEV_REQUEST_GET_INTERFACE 10
#define USB_DEV_REQUEST_SET_INTERFACE 11
#define USB_DEV_REQUEST_SYNC_FRAME 12

/* USB GET_STATUS Bit Values */
#define USB_GETSTATUS_SELF_POWERED 0x01
#define USB_GETSTATUS_REMOTE_WAKEUP 0x02
#define USB_GETSTATUS_ENDPOINT_STALL 0x01

/* USB Standard Feature selectors */
#define USB_FEATURE_ENDPOINT_STALL 0
#define USB_FEATURE_REMOTE_WAKEUP 1


/* USB Descriptor Types */
#define USB_DEVICE_DESCRIPTOR_TYPE 1
#define USB_CONFIGURATION_DESCRIPTOR_TYPE 2
#define USB_STRING_DESCRIPTOR_TYPE 3
#define USB_INTERFACE_DESCRIPTOR_TYPE 4
#define USB_ENDPOINT_DESCRIPTOR_TYPE 5
#define USB_DEVICE_QUALIFIER_DESCRIPTOR_TYPE 6
#define USB_OTHER_SPEED_CONFIG_DESCRIPTOR_TYPE 7
#define USB_INTERFACE_POWER_DESCRIPTOR_TYPE 8
#define USB_OTG_DESCRIPTOR_TYPE 9
#define USB_DEBUG_DESCRIPTOR_TYPE 10
#define USB_INTERFACE_ASSOCIATION_DESCRIPTOR_TYPE 11

/* USB Device Classes */
#define USB_DEVICE_CLASS_RESERVED 0x00
#define USB_DEVICE_CLASS_AUDIO 0x01
#define USB_DEVICE_CLASS_COMMUNICATIONS 0x02
#define USB_DEVICE_CLASS_HUMAN_INTERFACE 0x03
#define USB_DEVICE_CLASS_MONITOR 0x04
#define USB_DEVICE_CLASS_PHYSICAL_INTERFACE 0x05
#define USB_DEVICE_CLASS_POWER 0x06
#define USB_DEVICE_CLASS_PRINTER 0x07
#define USB_DEVICE_CLASS_STORAGE 0x08
#define USB_DEVICE_CLASS_HUB 0x09
#define USB_DEVICE_CLASS_MISCELLANEOUS 0xEF
#define USB_DEVICE_CLASS_DFU			 0xEF
#define USB_DEVICE_CLASS_VENDOR_SPECIFIC 0xFF

/* USB Interface Classes */
#define USB_INTERFACE_CLASS_COMMUNICATIONS 0x02
#define USB_INTERFACE_CLASS_COMMUNICATIONS_DATA 0x0A
#define USB_INTERFACE_SUBCLASS_ACM 0x02
#define USB_INTERFACE_PROTOCOL_V25TER 0x01


/* bmAttributes in Configuration Descriptor */
#define USB_CONFIG_POWERED_MASK 0x40
#define USB_CONFIG_BUS_POWERED 0x80
#define USB_CONFIG_SELF_POWERED 0xC0
#define USB_CONFIG_REMOTE_WAKEUP 0x20

/* bMaxPower in Configuration Descriptor */
#define USB_CONFIG_POWER_MA(mA) ((mA)/2)

/* bEndpointAddress in Endpoint Descriptor */
#define USB_ENDPOINT_DIRECTION_MASK 0x80
#define USB_ENDPOINT_OUT (0x00)
#define USB_ENDPOINT_IN (0x80)

/* bmAttributes in Endpoint Descriptor */
#define USB_ENDPOINT_TYPE_MASK 0x03
#define USB_ENDPOINT_TYPE_CONTROL 0x00
#define USB_ENDPOINT_TYPE_ISOCHRONOUS 0x01
#define USB_ENDPOINT_TYPE_BULK 0x02
#define USB_ENDPOINT_TYPE_INTERRUPT 0x03
#define USB_ENDPOINT_SYNC_MASK 0x0C
#define USB_ENDPOINT_SYNC_NO_SYNCHRONIZATION 0x00
#define USB_ENDPOINT_SYNC_ASYNCHRONOUS 0x04
#define USB_ENDPOINT_SYNC_ADAPTIVE 0x08
#define USB_ENDPOINT_SYNC_SYNCHRONOUS 0x0C
#define USB_ENDPOINT_USAGE_MASK 0x30
#define USB_ENDPOINT_USAGE_DATA 0x00
#define USB_ENDPOINT_USAGE_FEEDBACK 0x10
#define USB_ENDPOINT_USAGE_IMPLICIT_FEEDBACK 0x20
#define USB_ENDPOINT_USAGE_RESERVED 0x30


//Part of DFU descriptors
#define USB_DEV_DFU_INTERFACE_NUM_ENDPOINTS 0x00 //Use control pipe
#define USB_DEV_DFU_INTERFACE_CLASS 0xFE
#define USB_DEV_DFU_INTERFACE_SUBCLASS 0x01
#define USB_DEV_DFU_INTERFACE_PROTOCOL 0x02

//Run time descriptor is part of run time descriptors
#define USB_DEV_DFU_RUNTIME_INTERFACE_ALTERNATE_SETTING 0x00
#define USB_DEV_DFU_RUNTIME_INTERFACE_NUM_ENDPOINTS 0x00 //Use control pipe
#define USB_DEV_DFU_RUNTIME_INTERFACE_CLASS USB_DEV_DFU_INTERFACE_CLASS
#define USB_DEV_DFU_RUNTIME_INTERFACE_SUBCLASS USB_DEV_DFU_INTERFACE_SUBCLASS
#define USB_DEV_DFU_RUNTIME_INTERFACE_PROTOCOL 0x01


#define USB_DEV_DFU_ATTRIBUTES_WILL_DETACH (1<<3)
#define USB_DEV_DFU_ATTRIBUTES_MANIFESTATION_TOLERANT (1<<2)
#define USB_DEV_DFU_ATTRIBUTES_CAN_UPLOAD (1<<1)
#define USB_DEV_DFU_ATTRIBUTES_CAN_DOWNLOAD (1<<0)

#define USB_DEV_DFU_FUNCTIONAL_DESCRIPTOR_TYPE 0x21

#define USB_DEV_DFU_SUBCLASS 0x00
#define USB_DEV_DFU_REQUEST_TYPE 0x21

//DFU requests
#define USB_DEV_DFU_DETACH 0
#define USB_DEV_DFU_DNLOAD 1
#define USB_DEV_DFU_UPLOAD 2
#define USB_DEV_DFU_GETSTATUS 3
#define USB_DEV_DFU_CLRSTATUS 4
#define USB_DEV_DFU_GETSTATE 5
#define USB_DEV_DFU_ABORT 6

enum {
	appIDLE,
	appDETACH,
	dfuIDLE,
	dfuDNLOAD_SYNC,
	dfuDNBUSY,
	dfuDNLOAD_IDLE,
	dfuMANIFEST_SYNC,
	dfuMANIFEST,
	dfuMANIFEST_WAIT_RESET,
	dfuUPLOAD_IDLE,
	dfuERROR
};

enum {
	OK,
	errTARGET,
	errFILE,
	errWRITE,
	errERASE,
	errCHECK_ERASED,
	errPROG,
	errVERFIY,
	errADDRESS,
	errNOTDONE,
	errFIRMWARE,
	errVENDOR,
	errUSBR,
	errUNKNOWN,
	errSTALLEDPKT
};




#endif /* USB_DEV_DEFS_H_ */


